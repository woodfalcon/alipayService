package com.core.config;import java.io.UnsupportedEncodingException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;import java.util.Map.Entry;import java.util.Set;import javax.servlet.http.HttpServletRequest;import org.springframework.validation.BindingResult;import org.springframework.validation.ObjectError;import com.core.config.resultStatusInfo.ResultMessage;import com.core.config.resultStatusInfo.ResultStatus;public class GeneralUtil {	/**	 * 主键生成	 * 	 * @param args	 */	public static String uniqueId(String str, String userId) {		Date date = new Date();		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");		str = str + sdf.format(date) + userId + createCode(false, 6);		return str.trim();	}	/**	 * 随机数生成，根据numberFlag确认生成的随机数类型	 * 	 * @param numberFlag	 * @param length	 * @return	 */	public static String createCode(boolean numberFlag, int length) {		String retStr = "";		String strTable = (numberFlag) ? "1234567890" : "1234567890abcdefghijkmnpqrstuvwxyz";		int len = strTable.length();		for (int i = 0; i < length; i++) {			double dblR = Math.random() * len;			int intR = (int) Math.floor(dblR);			retStr = retStr + strTable.charAt(intR);		}		return retStr;	}	/**	 * 获取request对象数据里的参数	 * 	 * @param request	 * @return	 */	public static Map<Object, Object> mapList(HttpServletRequest request) {		Map<Object, Object> mapList = new HashMap<Object, Object>();		Map<String, String[]> map = request.getParameterMap();		Set<Entry<String, String[]>> keSet = map.entrySet();		for (Iterator<Entry<String, String[]>> itr = keSet.iterator(); itr.hasNext();) {			Entry<String, String[]> me = itr.next();			Object ok = me.getKey();			Object ov = me.getValue();			String[] value = new String[1];			if (ov instanceof String[]) {				value = (String[]) ov;			} else {				value[0] = ov.toString();			}			for (int k = 0; k < value.length; k++) {				mapList.put(ok, value[k]);			}		}		return mapList;	}	/**	 * 获取当前时间	 * 	 * @param args	 */	public static String nowTime() {		Date day = new Date();		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");		System.out.println(df.format(day));		return df.format(day);	}	public static void main(String[] args) {	}/*	*//**	 * 参数校验错误格式化	 *//*	public static String parameter(BindingResult bindingResult) {		List<ObjectError> ls = bindingResult.getAllErrors();		Map<String, Object> map = new HashMap<String, Object>();		for (int i = 0; i < ls.size(); i++) {			int errorNum = i + 1;			map.put("错误" + errorNum, ls.get(i).getDefaultMessage());		}		String erroRtInfo = JsonUtil.toJson(map, ResultStatus.PARAMETERERROR, ResultMessage.PARAMETERERROR);		return erroRtInfo;	}*/		/**	 * 拼接授权url	 * @param appid	 * @param redirect_uri	 * @return	 */	public static String oAuthUrl(String appid, String redirectUri,String scope) {		try {			redirectUri = java.net.URLEncoder.encode(redirectUri, "utf-8");		} catch (UnsupportedEncodingException e) {			e.printStackTrace();		}		String oauth2Url = "https://openauth.alipay.com/oauth2/publicAppAuthorize.htm?app_id=" + appid+ "&scope=" +scope+ "&redirect_uri="				+ redirectUri ;		System.out.println("oauth2.do》》》》oauth2Url=" + oauth2Url);		return oauth2Url;	}		/**	 * obj转String	 * @param obj	 * @return	 */	public static String valueOf(Object obj) {		return (obj == null) ? "null" : obj.toString();	}}